{"version":3,"sources":["BooksAPI.js","component/BooksControl.jsx","component/ListBooks.jsx","component/BooksShelf.jsx","component/SearchBook.jsx","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BooksControl","_this$props","this","props","shelfUpdate","react_default","a","createElement","className","value","onChange","e","target","disabled","Component","ListBooks","author","authors","style","width","height","component_BooksControl","controlCheck","title","BooksShelf","_this","currentlyRead","filter","wantToRead","read","map","key","component_ListBooks","SearchBook","react_router_dom","to","type","placeholder","searchedBooks","BooksApp","state","showSearchBookPage","length","BooksAPI","_step","searchResult","_iterator","_createForOfIteratorHelper","s","n","done","_step2","serachedBook","_iterator2","err","f","push","setState","prevState","catch","addedbook","addedBooks","componentDidMount","_this2","_this3","react_router","exact","path","render","component_BooksShelf","component_SearchBook","React","ReactDOM","src_App","document","getElementById"],"mappings":"uQACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,GAAD,OACpBd,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,SChBRC,0LAxBN,IAAAC,EAEyBC,KAAKC,MAA3BC,EAFHH,EAEGG,YAAcvB,EAFjBoB,EAEiBpB,KAEtB,OACIwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,UAAQE,MAAO5B,EAAKC,MAAO4B,SAAW,SAACC,GAAD,OAAOP,EAAYvB,EAAM8B,EAAEC,OAAOH,SAExEJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,OAAOI,UAAQ,GAA7B,cAEAR,EAAAC,EAAAC,cAAA,UAAQE,MAAM,oBAAd,qBAEAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,cAAd,gBAEAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,QAAd,QAEAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,QAAd,iBAjBeK,cCkCZC,mLA/BF,IACGlC,EAASqB,KAAKC,MAAdtB,KAIFmC,EAASnC,EAAKoC,QAAUpC,EAAKoC,QAAU,iBAE7C,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaU,MAAO,CAAEC,MAAO,IAAKC,OAAQ,OAEzDf,EAAAC,EAAAC,cAACc,EAAD,CACAjB,YAAgBF,KAAKC,MAAMC,YAC3BvB,KAASA,EACTkB,MAAUG,KAAKC,MAAMJ,MAErBuB,aAAiBpB,KAAKC,MAAMmB,gBAIhCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc3B,EAAK0C,OAElClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBQ,WA3BvBF,aC6ETU,mLA3EJ,IAAAC,EAAAvB,KACCH,EAAUG,KAAKC,MAAfJ,MAEF2B,EAAgB3B,EAAM4B,OAAQ,SAAC9C,GAAD,MAAyB,kBAAfA,EAAKC,QAE7C8C,EAAa7B,EAAM4B,OAAQ,SAAC9C,GAAD,MAAyB,iBAAfA,EAAKC,QAE1C+C,EAAO9B,EAAM4B,OAAQ,SAAC9C,GAAD,MAAyB,SAAfA,EAAKC,QAE1C,OACIuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,kBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAGNkB,EAAcI,IAAK,SAACjD,GAAD,OACfwB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKlD,EAAKI,IACVoB,EAAAC,EAAAC,cAACyB,EAAD,CAAWjC,MAAU0B,EAAKtB,MAAMJ,MAASlB,KAASA,EAClDuB,YAAgBqB,EAAKtB,MAAMC,oBAUhDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,gBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAGfoB,EAAWE,IAAK,SAACjD,GAAD,OACZwB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKlD,EAAKI,IACVoB,EAAAC,EAAAC,cAACyB,EAAD,CAAWjC,MAAU0B,EAAKtB,MAAMJ,MAASlB,KAASA,EAClDuB,YAAgBqB,EAAKtB,MAAMC,oBAUvCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,SAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAGfqB,EAAKC,IAAK,SAACjD,GAAD,OACNwB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKlD,EAAKI,IACVoB,EAAAC,EAAAC,cAACyB,EAAD,CAAWjC,MAAU0B,EAAKtB,MAAMJ,MAASlB,KAASA,EAClDuB,YAAgBqB,EAAKtB,MAAMC,4BA/DtBU,aCqCVmB,mLAlCF,IAAAR,EAAAvB,KACGN,EAAWM,KAAKC,MAAhBP,OAER,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAEXH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM1B,UAAU,eAAe2B,GAAG,KAAlC,eAEC9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAEXH,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,OAAOC,YAAY,4BAA4B3B,SAAa,SAACC,GAAD,OAAOf,EAAOe,EAAEC,OAAOH,YAIxGJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAERN,KAAKC,MAAMmC,cAAgB,EACvBpC,KAAKC,MAAMmC,cAAcR,IAAK,SAACjD,GAAD,OAC1BwB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKlD,EAAKI,IACVoB,EAAAC,EAAAC,cAACyB,EAAD,CAAWnD,KAASA,EAAOuB,YAAeqB,EAAKtB,MAAMC,iBAG7DC,EAAAC,EAAAC,cAAA,iCA3BFO,4iCC8RVyB,6MAxRbC,MAAQ,CAENzC,MAAM,GACN0C,mBAAoB,MAatB7C,OAAS,SAACC,GACa,IAAjBA,EAAM6C,OACRC,EAAgB9C,GAAOJ,KAAM,SAAAgD,GAC3B,IADkDG,EAC9CC,EAAe,GAD+BC,EAAAC,EAErBN,GAFqB,IAEhD,IAAAK,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAgD,KAAAC,EAArCC,EAAqCR,EAAAnC,MAAA4C,EAAAN,EAC3BtB,EAAKe,MAAMzC,OADgB,IAC9C,IAAAsD,EAAAL,MAAAG,EAAAE,EAAAJ,KAAAC,MAAqC,KAA1BrE,EAA0BsE,EAAA1C,MAC7B2C,EAAanE,KAAOJ,EAAKI,KAC3BmE,EAAatE,MAAQD,EAAKC,QAHc,MAAAwE,GAAAD,EAAA1C,EAAA2C,GAAA,QAAAD,EAAAE,IAM9CV,EAAaW,KAAKJ,IAR4B,MAAAE,GAAAR,EAAAnC,EAAA2C,GAAA,QAAAR,EAAAS,IAUhD,OAAOV,IACRpD,KAAK,SAACgD,GACPhB,EAAKgC,SAAS,SAACC,GAAD,MAAgB,CAAEjB,0BAC/BkB,MAAM,SAAAlB,GAAkB,OAAIhB,EAAKgC,SAAS,CAAEhB,mBAAoB,OAEnEhB,EAAKgC,SAAS,CAAEhB,mBAAoB,QAQxCrC,YAAc,SAACwD,EAAW9E,GACxB6D,EAAgBiB,EAAW9E,GAAOW,KAAM,SAAAC,GACtCkE,EAAU9E,MAAQA,IAGpB,IAAI+E,EAAapC,EAAKe,MAAMzC,MAAM4B,OAAQ,SAAA9C,GAAI,OAAIA,EAAKI,KAAO2E,EAAU3E,KACxE4E,EAAWL,KAAKI,GAChBnC,EAAKgC,SAAS,CAAE1D,MAAO8D,IACvBpC,EAAKgC,SAAS,CAAEhB,mBAAoB,KACpChB,EAAKqC,wGA3Ca,IAAAC,EAAA7D,KLGpBnB,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,QKJDN,KAAM,SAAAM,GACtBgE,EAAKN,SAAS,CACZ1D,6CA2CG,IAAAiE,EAAA9D,KACP,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAS,kBAC7B/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAC8D,EAAD,CACEtE,MAAOiE,EAAKxB,MAAMzC,MAClBK,YAAa4D,EAAK5D,eAGxBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,WAAT,mBAKN9B,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOE,KAAK,UAAUC,OAAS,kBAC7B/D,EAAAC,EAAAC,cAAC+D,EAAD,CACE7B,mBAAqBuB,EAAKxB,MAAMC,mBAChC7C,OAAQoE,EAAKpE,OACbQ,YAAa4D,EAAK5D,yBA9EPmE,IAAMzD,iBCD7B0D,IAASJ,OACL/D,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KAAe7B,EAAAC,EAAAC,cAACkE,EAAD,OACfC,SAASC,eAAe","file":"static/js/main.f5e91999.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React,{Component} from 'react';\r\n\r\nclass BooksControl extends Component{\r\n render(){\r\n\r\n    const { shelfUpdate , book} = this.props;\r\n\r\n    return(\r\n        <div className=\"book-BooksShelf-changer\">\r\n            <select value={book.shelf} onChange={ (e) => shelfUpdate(book, e.target.value)} >\r\n\r\n            <option value=\"move\" disabled>Move to...</option>\r\n\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            \r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            \r\n            <option value=\"read\">Read</option>\r\n            \r\n            <option value=\"none\">None</option>\r\n\r\n            </select>\r\n        </div>\r\n    )\r\n }\r\n}\r\n\r\nexport default BooksControl","import React,{Component} from 'react';\r\nimport BooksControl from './BooksControl';\r\n\r\nclass ListBooks extends Component {\r\n\r\n    render() {\r\n        const { book } = this.props;\r\n\r\n        \r\n\r\n        const author = book.authors ? book.authors : \"Unknown Author\";\r\n\r\n        return (\r\n            <div className=\"book\">\r\n\r\n                <div className=\"book-top\">\r\n\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 193 }}></div>\r\n\r\n                    <BooksControl \r\n                    shelfUpdate = { this.props.shelfUpdate }\r\n                    book = { book }\r\n                    books = { this.props.books }\r\n\r\n                    controlCheck = { this.props.controlCheck }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"book-title\">{book.title}</div>\r\n\r\n                <div className=\"book-authors\">{author}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListBooks","import React,{Component} from 'react';\r\nimport ListBooks from './ListBooks';\r\n\r\nclass BooksShelf extends Component{\r\n     \r\n   render(){\r\n    const { books } = this.props;\r\n\r\n    const currentlyRead = books.filter( (book) => book.shelf === \"currentlyRead\");\r\n\r\n    const wantToRead = books.filter( (book) => book.shelf === \"want-To-Read\");\r\n\r\n    const read = books.filter( (book) => book.shelf === \"read\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"bookBooksShelf\">\r\n            <h2 className=\"bookBooksShelf-title\">Currently Read</h2>\r\n\r\n            <div className=\"bookBooksShelf-books\"> \r\n             <ol className=\"books-grid\">\r\n\r\n                 {\r\n                     currentlyRead.map( (book) => (\r\n                         <li key={book.id}>\r\n                             <ListBooks books = { this.props.books }  book = { book } \r\n                             shelfUpdate = { this.props.shelfUpdate }\r\n                             />\r\n                         </li>\r\n                     ))\r\n                 }\r\n\r\n             </ol>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"bookBooksShelf\">\r\n            <h2 className=\"bookBooksShelf-title\">Want to Read</h2>\r\n\r\n            <div className=\"bookBooksShelf-books\"> \r\n             <ol className=\"books-grid\">\r\n\r\n        {\r\n            wantToRead.map( (book) => (\r\n                <li key={book.id}>\r\n                    <ListBooks books = { this.props.books }  book = { book } \r\n                    shelfUpdate = { this.props.shelfUpdate }\r\n                    />\r\n                </li>\r\n            ))\r\n        }\r\n\r\n        </ol>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"bookBooksShelf\">\r\n            <h2 className=\"bookBooksShelf-title\"> Read</h2>\r\n\r\n            <div className=\"bookBooksShelf-books\"> \r\n             <ol className=\"books-grid\">\r\n\r\n        {\r\n            read.map( (book) => (\r\n                <li key={book.id}>\r\n                    <ListBooks books = { this.props.books }  book = { book } \r\n                    shelfUpdate = { this.props.shelfUpdate }\r\n                    />\r\n                </li>\r\n            ))\r\n        }\r\n\r\n        </ol>\r\n        </div>\r\n        </div>\r\n</div>\r\n    )\r\n   }\r\n}\r\n\r\nexport default BooksShelf","import React,{Component} from 'react';\r\nimport ListBooks from './ListBooks';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchBook extends Component{\r\n\r\n    render() {\r\n        const { search } = this.props;\r\n\r\n        return (\r\n            <div className=\"search-books\"> \r\n             \r\n             <div className=\"search-books-bar\">\r\n\r\n                 <Link className=\"close-search\" to=\"/\"> Close Page</Link>\r\n\r\n                  <div className=\"search-books-input-wrapper\">\r\n\r\n                      <input type=\"text\" placeholder=\"search by title or author\" onChange = { (e) => search(e.target.value)} />\r\n                  </div>\r\n             </div>\r\n\r\n             <div className=\"search-books-results\">\r\n                 <ol className=\"books-grid\">\r\n                   {\r\n                       this.props.searchedBooks > 0 ? (\r\n                           this.props.searchedBooks.map( (book) => (\r\n                               <li key={book.id}>\r\n                                   <ListBooks book = { book } shelfUpdate= { this.props.shelfUpdate } />\r\n                               </li>\r\n                           ))\r\n                       ) : <li>No result</li>\r\n                   }\r\n                 </ol>\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBook","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\n\r\n\r\nimport BooksShelf from './component/BooksShelf';\r\nimport SearchBook from './component/SearchBook';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    \r\n    books:[],\r\n    showSearchBookPage :[],\r\n    // showSearchBookPage: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then( books => {\r\n      this.setState({\r\n        books\r\n      })\r\n    })\r\n  }\r\n\r\n \r\n  search = (query) => {\r\n    if (query.length !== 0) {\r\n      BooksAPI.search(query).then( showSearchBookPage  => {\r\n        let searchResult = [];\r\n          for (const serachedBook of showSearchBookPage ) {\r\n            for (const book of this.state.books) {\r\n                if (serachedBook.id === book.id) {\r\n                  serachedBook.shelf = book.shelf\r\n                }\r\n            }\r\n            searchResult.push(serachedBook)\r\n          }\r\n          return searchResult\r\n      }).then((showSearchBookPage ) => {\r\n        this.setState((prevState) => ({ showSearchBookPage }))\r\n      }).catch(showSearchBookPage => this.setState({ showSearchBookPage: [] }))\r\n    } else {\r\n      this.setState({ showSearchBookPage: [] })\r\n    }\r\n  }\r\n  /*\r\n   it runs update whenever shelf selection is made;\r\n   prior to adding a book to its selected shelf, it checks if the book is already on that shelf;\r\n   once added, book search is reset an empty array;\r\n  */\r\n  shelfUpdate = (addedbook, shelf) => {\r\n    BooksAPI.update(addedbook, shelf).then( res => {\r\n      addedbook.shelf = shelf\r\n    })\r\n\r\n    let addedBooks = this.state.books.filter( book => book.id !== addedbook.id )\r\n    addedBooks.push(addedbook);\r\n    this.setState({ books: addedBooks })\r\n   \tthis.setState({ showSearchBookPage: [] })\r\n    this.componentDidMount()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path=\"/\" render={ () => (\r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <BooksShelf\r\n                  books={this.state.books}\r\n                  shelfUpdate={this.shelfUpdate}\r\n                />\r\n            </div>\r\n            <div className=\"open-search\">\r\n              <Link to=\"/search\">Add a book</Link>\r\n            </div>\r\n          </div>\r\n        )} />\r\n\r\n        <Route path=\"/search\" render={ () => (\r\n          <SearchBook\r\n            showSearchBookPage ={this.state.showSearchBookPage }\r\n            search={this.search}\r\n            shelfUpdate={this.shelfUpdate}\r\n          />\r\n        )}\r\n        />\r\n        </div>\r\n    )\r\n  }\r\n// }\r\n\r\n\r\n  // render() {\r\n\r\n  //   const { books } = this.state;\r\n\r\n  //   return (\r\n  //     <div className=\"app\">\r\n  //       {this.state.showSearchBookPage ? (\r\n  //         <div className=\"SearchBook-books\">\r\n  //           <div className=\"SearchBook-books-bar\">\r\n  //             <button className=\"close-SearchBook\" onClick={() => this.setState({ showSearchBookPage: false })}>Close</button>\r\n  //             <div className=\"SearchBook-books-input-wrapper\">\r\n  //               {/*\r\n  //                 NOTES: The SearchBook from BooksAPI is limited to a particular set of SearchBook terms.\r\n  //                 You can find these SearchBook terms here:\r\n  //                 https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SearchBook_TERMS.md\r\n\r\n  //                 However, remember that the BooksAPI.SearchBook method DOES SearchBook by title or author. So, don't worry if\r\n  //                 you don't find a specific author or title. Every SearchBook is limited by SearchBook terms.\r\n  //               */}\r\n  //               <input type=\"text\" placeholder=\"SearchBook by title or author\"/>\r\n\r\n  //             </div>\r\n  //           </div>\r\n  //           <div className=\"SearchBook-books-results\">\r\n  //             <ol className=\"books-grid\"></ol>\r\n  //           </div>\r\n  //         </div>\r\n  //       ) : (\r\n  //         <div className=\"list-books\">\r\n  //           <div className=\"list-books-title\">\r\n  //             <h1>MyReads</h1>\r\n  //           </div>\r\n  //           <div className=\"list-books-content\">\r\n  //             <div>\r\n  //               <div className=\"bookBooksShelf\">\r\n  //                 <h2 className=\"bookBooksShelf-title\">Currently Reading</h2>\r\n  //                 <div className=\"bookBooksShelf-books\">\r\n  //                   <ol className=\"books-grid\">\r\n  //                     <li>\r\n  //                       <div className=\"book\">\r\n  //                         <div className=\"book-top\">\r\n  //                           <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(\"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\")' }}></div>\r\n  //                           <div className=\"book-BooksShelf-changer\">\r\n  //                             <select>\r\n  //                               <option value=\"move\" disabled>Move to...</option>\r\n  //                               <option value=\"currentlyReading\">Currently Reading</option>\r\n  //                               <option value=\"wantToRead\">Want to Read</option>\r\n  //                               <option value=\"read\">Read</option>\r\n  //                               <option value=\"none\">None</option>\r\n  //                             </select>\r\n  //                           </div>\r\n  //                         </div>\r\n  //                         <div className=\"book-title\">To Kill a Mockingbird</div>\r\n  //                         <div className=\"book-authors\">Harper Lee</div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                     <li>\r\n  //                       <div className=\"book\">\r\n  //                         <div className=\"book-top\">\r\n  //                           <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: 'url(\"http://books.google.com/books/content?id=yDtCuFHXbAYC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72RRiTR6U5OUg3IY_LpHTL2NztVWAuZYNFE8dUuC0VlYabeyegLzpAnDPeWxE6RHi0C2ehrR9Gv20LH2dtjpbcUcs8YnH5VCCAH0Y2ICaKOTvrZTCObQbsfp4UbDqQyGISCZfGN&source=gbs_api\")' }}></div>\r\n  //                           <div className=\"book-BooksShelf-changer\">\r\n  //                             <select>\r\n  //                               <option value=\"move\" disabled>Move to...</option>\r\n  //                               <option value=\"currentlyReading\">Currently Reading</option>\r\n  //                               <option value=\"wantToRead\">Want to Read</option>\r\n  //                               <option value=\"read\">Read</option>\r\n  //                               <option value=\"none\">None</option>\r\n  //                             </select>\r\n  //                           </div>\r\n  //                         </div>\r\n  //                         <div className=\"book-title\">Ender's Game</div>\r\n  //                         <div className=\"book-authors\">Orson Scott Card</div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                   </ol>\r\n  //                 </div>\r\n  //               </div>\r\n  //               <div className=\"bookBooksShelf\">\r\n  //                 <h2 className=\"bookBooksShelf-title\">Want to Read</h2>\r\n  //                 <div className=\"bookBooksShelf-books\">\r\n  //                   <ol className=\"books-grid\">\r\n  //                     <li>\r\n  //                       <div className=\"book\">\r\n  //                         <div className=\"book-top\">\r\n  //                           <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(\"http://books.google.com/books/content?id=uu1mC6zWNTwC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73pGHfBNSsJG9Y8kRBpmLUft9O4BfItHioHolWNKOdLavw-SLcXADy3CPAfJ0_qMb18RmCa7Ds1cTdpM3dxAGJs8zfCfm8c6ggBIjzKT7XR5FIB53HHOhnsT7a0Cc-PpneWq9zX&source=gbs_api\")' }}></div>\r\n  //                           <div className=\"book-BooksShelf-changer\">\r\n  //                             <select>\r\n  //                               <option value=\"move\" disabled>Move to...</option>\r\n  //                               <option value=\"currentlyReading\">Currently Reading</option>\r\n  //                               <option value=\"wantToRead\">Want to Read</option>\r\n  //                               <option value=\"read\">Read</option>\r\n  //                               <option value=\"none\">None</option>\r\n  //                             </select>\r\n  //                           </div>\r\n  //                         </div>\r\n  //                         <div className=\"book-title\">1776</div>\r\n  //                         <div className=\"book-authors\">David McCullough</div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                     <li>\r\n  //                       <div className=\"book\">\r\n  //                         <div className=\"book-top\">\r\n  //                           <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api\")' }}></div>\r\n  //                           <div className=\"book-BooksShelf-changer\">\r\n  //                             <select>\r\n  //                               <option value=\"move\" disabled>Move to...</option>\r\n  //                               <option value=\"currentlyReading\">Currently Reading</option>\r\n  //                               <option value=\"wantToRead\">Want to Read</option>\r\n  //                               <option value=\"read\">Read</option>\r\n  //                               <option value=\"none\">None</option>\r\n  //                             </select>\r\n  //                           </div>\r\n  //                         </div>\r\n  //                         <div className=\"book-title\">Harry Potter and the Sorcerer's Stone</div>\r\n  //                         <div className=\"book-authors\">J.K. Rowling</div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                   </ol>\r\n  //                 </div>\r\n  //               </div>\r\n  //               <div className=\"bookBooksShelf\">\r\n  //                 <h2 className=\"bookBooksShelf-title\">Read</h2>\r\n  //                 <div className=\"bookBooksShelf-books\">\r\n  //                   <ol className=\"books-grid\">\r\n  //                     <li>\r\n  //                       <div className=\"book\">\r\n  //                         <div className=\"book-top\">\r\n  //                           <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api\")' }}></div>\r\n  //                           <div className=\"book-BooksShelf-changer\">\r\n  //                             <select>\r\n  //                               <option value=\"move\" disabled>Move to...</option>\r\n  //                               <option value=\"currentlyReading\">Currently Reading</option>\r\n  //                               <option value=\"wantToRead\">Want to Read</option>\r\n  //                               <option value=\"read\">Read</option>\r\n  //                               <option value=\"none\">None</option>\r\n  //                             </select>\r\n  //                           </div>\r\n  //                         </div>\r\n  //                         <div className=\"book-title\">The Hobbit</div>\r\n  //                         <div className=\"book-authors\">J.R.R. Tolkien</div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                     <li>\r\n  //                       <div className=\"book\">\r\n  //                         <div className=\"book-top\">\r\n  //                           <div className=\"book-cover\" style={{ width: 128, height: 174, backgroundImage: 'url(\"http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api\")' }}></div>\r\n  //                           <div className=\"book-BooksShelf-changer\">\r\n  //                             <select>\r\n  //                               <option value=\"move\" disabled>Move to...</option>\r\n  //                               <option value=\"currentlyReading\">Currently Reading</option>\r\n  //                               <option value=\"wantToRead\">Want to Read</option>\r\n  //                               <option value=\"read\">Read</option>\r\n  //                               <option value=\"none\">None</option>\r\n  //                             </select>\r\n  //                           </div>\r\n  //                         </div>\r\n  //                         <div className=\"book-title\">Oh, the Places You'll Go!</div>\r\n  //                         <div className=\"book-authors\">Seuss</div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                     <li>\r\n  //                       <div className=\"book\">\r\n  //                         <div className=\"book-top\">\r\n  //                           <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api\")' }}></div>\r\n  //                           <div className=\"book-BooksShelf-changer\">\r\n  //                             <select>\r\n  //                               <option value=\"move\" disabled>Move to...</option>\r\n  //                               <option value=\"currentlyReading\">Currently Reading</option>\r\n  //                               <option value=\"wantToRead\">Want to Read</option>\r\n  //                               <option value=\"read\">Read</option>\r\n  //                               <option value=\"none\">None</option>\r\n  //                             </select>\r\n  //                           </div>\r\n  //                         </div>\r\n  //                         <div className=\"book-title\">The Adventures of Tom Sawyer</div>\r\n  //                         <div className=\"book-authors\">Mark Twain</div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                   </ol>\r\n  //                 </div>\r\n  //               </div>\r\n  //             </div>\r\n  //           </div>\r\n  //           <div className=\"open-SearchBook\">\r\n  //             <button onClick={() => this.setState({ showSearchBookPage: true })}>Add a book</button>\r\n  //           </div>\r\n  //         </div>\r\n  //       )}\r\n  //     </div>\r\n  //   )\r\n  // }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter><App /></BrowserRouter>,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}